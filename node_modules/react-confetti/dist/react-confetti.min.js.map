{"version":3,"file":"react-confetti.min.js","sources":["../src/utils.js","../src/confetti.js","../src/react-confetti.js"],"sourcesContent":["export function norm(value, min, max) {\n  return (value - min) / (max - min)\n}\n\nexport function lerp(lnorm, min, max) {\n  return ((max - min) * lnorm) + min\n}\n\nexport function map(value, sourceMin, sourceMax, destMin, destMax) {\n  return lerp(norm(value, sourceMin, sourceMax), destMin, destMax)\n}\n\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, Math.min(min, max)), Math.max(min, max))\n}\n\nexport function distance(p0, p1) {\n  const dx = p1.x - p0.x\n  const dy = p1.y - p0.y\n  return Math.sqrt((dx * dx) + (dy * dy))\n}\n\nexport function distanceXY(x0, y0, x1, y1) {\n  const dx = x1 - x0\n  const dy = y1 - y0\n  return Math.sqrt((dx * dx) + (dy * dy))\n}\n\nexport function circleCollision(c0, c1) {\n  return distance(c0, c1) <= c0.radius + c1.radius\n}\n\nexport function circlePointCollision(x, y, circle) {\n  return distanceXY(x, y, circle.x, circle.y) < circle.radius\n}\n\nexport function inRange(value, min, max) {\n  return value >= Math.min(min, max) && value <= Math.max(min, max)\n}\n\nexport function pointInRect(x, y, rect) {\n  return inRange(x, rect.x, rect.x + rect.width) &&\n    inRange(y, rect.y, rect.y + rect.height)\n}\n\nexport function rangeIntersect(min0, max0, min1, max1) {\n  return Math.max(min0, max0) >= Math.min(min1, max1) &&\n    Math.min(min0, max0) <= Math.max(min1, max1)\n}\n\nexport function rectIntersect(r0, r1) {\n  return rangeIntersect(r0.x, r0.x + r0.width, r1.x, r1.x + r1.width) &&\n    rangeIntersect(r0.y, r0.y + r0.height, r1.y, r1.y + r1.height)\n}\n\nexport function degreesToRads(degrees) {\n  return degrees / (180 * Math.PI)\n}\n\nexport function radsToDegrees(radians) {\n  return (radians * 180) / Math.PI\n}\n\nexport function randomRange(min, max) {\n  return min + (Math.random() * (max - min))\n}\n\nexport function randomInt(min, max) {\n  return Math.floor(min + (Math.random() * ((max - min) + 1)))\n}\n","import * as utils from './utils'\n\n/**\n * Most of this was coppied directly from the pen at http://codepen.io/Gthibaud/pen/BoaBZK\n * and halfheartedly converted to es6.\n */\nfunction confetti(canvas) {\n  let numberOfPieces = 200\n  let confettiSource = {\n    x: 0,\n    y: 0,\n    w: canvas.width,\n    h: 0,\n  }\n  let friction = 0.99\n  let wind = 0\n  let gravity = 0.1\n  let colors = [\n    '#f44336', '#e91e63', '#9c27b0', '#673ab7', '#3f51b5',\n    '#2196f3', '#03a9f4', '#00bcd4', '#009688', '#4CAF50',\n    '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107', '#FF9800',\n    '#FF5722', '#795548',\n  ]\n  let opacity = 1.0\n  let recycle = true\n  let run = true\n\n  function self() {\n    const context = canvas.getContext('2d')\n\n    function Particle(x, y) {\n      this.radius = utils.randomRange(0.1, 1)\n      this.x = x\n      this.y = y\n      this.vx = utils.randomRange(-4, 4)\n      this.vy = utils.randomRange(-10, -0)\n      this.type = utils.randomInt(0, 1)\n\n      this.w = utils.randomRange(5, 20)\n      this.h = utils.randomRange(5, 20)\n\n      this.r = utils.randomRange(5, 10)\n\n      this.angle = utils.degreesToRads(utils.randomRange(0, 360))\n      this.anglespin = utils.randomRange(-0.2, 0.2)\n      this.color = colors[Math.floor(Math.random() * colors.length)]\n\n      this.rotateY = utils.randomRange(0, 1)\n    }\n\n    Particle.prototype.update = function updateParticle() {\n      this.x += this.vx\n      this.y += this.vy\n      this.vy += gravity\n      this.vx += wind\n      this.vx *= friction\n      this.vy *= friction\n      this.radius -= 0.02\n      if(this.rotateY < 1) {\n        this.rotateY += 0.1\n      } else {\n        this.rotateY = -1\n      }\n      this.angle += this.anglespin\n      context.save()\n      context.translate(this.x, this.y)\n      context.rotate(this.angle)\n      context.scale(1, this.rotateY)\n      context.rotate(this.angle)\n      context.beginPath()\n      context.fillStyle = this.color\n      context.strokeStyle = this.color\n      context.globalAlpha = opacity\n      context.lineCap = 'round'\n      context.lineWidth = 2\n      if(this.type === 0) {\n        context.beginPath()\n        context.arc(0, 0, this.r, 0, 2 * Math.PI)\n        context.fill()\n      } else if(this.type === 2) {\n        context.beginPath()\n        for(let i = 0; i < 22; i++) {\n          const angle = 0.5 * i\n          const x = (0.2 + (1.5 * angle)) * Math.cos(angle)\n          const y = (0.2 + (1.5 * angle)) * Math.sin(angle)\n          context.lineTo(x, y)\n        }\n        context.stroke()\n      } else if(this.type === 1) {\n        context.fillRect(-this.w / 2, -this.h / 2, this.w, this.h)\n      }\n      context.closePath()\n      context.restore()\n    }\n\n    function ParticleGenerator(source, number, text) {\n      // particle will spawn in this aera\n      this.x = source.x\n      this.y = source.y\n      this.w = source.w\n      this.h = source.h\n      this.number = number\n      this.particles = []\n      this.particlesGenerated = 0\n      this.text = text\n      this.recycle = recycle\n    }\n    ParticleGenerator.prototype.removeParticleAt = function removeParticleAt(i) {\n      this.particles.splice(i, 1)\n    }\n    ParticleGenerator.prototype.getParticle = function addParticle() {\n      const newParticleX = utils.randomRange(this.x, this.w + this.x)\n      const newParticleY = utils.randomRange(this.y, this.h + this.y)\n      return new Particle(newParticleX, newParticleY, this.text)\n    }\n    ParticleGenerator.prototype.animate = function animateParticle() {\n      if(!run) {\n        return false\n      }\n      const nP = this.particles.length\n      const limit = this.recycle ? nP : this.particlesGenerated\n      if(limit < this.number) {\n        this.particles.push(this.getParticle())\n        this.particlesGenerated += 1\n      }\n\n      this.particles.forEach((p, i) => {\n        p.update()\n        if(p.y > canvas.height || p.y < -100 || p.x > canvas.width + 100 || p.x < -100) {\n          if(recycle && limit <= this.number) {\n            // a brand new particle replacing the dead one\n            this.particles[i] = this.getParticle()\n          } else {\n            this.removeParticleAt(i)\n          }\n        }\n      })\n      return nP > 0 || limit < this.number\n    }\n\n    self.particleGenerator = new ParticleGenerator(confettiSource, numberOfPieces)\n\n    self.update = () => {\n      if(run) {\n        self.particleGenerator.number = numberOfPieces\n        // context.globalAlpha=.5;\n        context.fillStyle = 'white'\n        context.clearRect(0, 0, canvas.width, canvas.height)\n      }\n      if(self.particleGenerator.animate()) {\n        requestAnimationFrame(self.update)\n      } else {\n        run = false\n      }\n    }\n\n    self.update()\n\n    return self\n  }\n\n  self.numberOfPieces = (...args) => {\n    if(!args.length) { return numberOfPieces }\n    [numberOfPieces] = args\n    if(self.particleGenerator) {\n      self.particleGenerator.number = numberOfPieces\n    }\n    return self\n  }\n\n  self.friction = (...args) => {\n    if(!args.length) { return friction }\n    [friction] = args\n    return self\n  }\n\n  self.wind = (...args) => {\n    if(!args.length) { return wind }\n    [wind] = args\n    return self\n  }\n\n  self.gravity = (...args) => {\n    if(!args.length) { return gravity }\n    [gravity] = args\n    return self\n  }\n\n  self.colors = (...args) => {\n    if(!args.length) { return colors }\n    [colors] = args\n    return self\n  }\n\n  self.opacity = (...args) => {\n    if(!args.length) { return opacity }\n    [opacity] = args\n    return self\n  }\n\n  self.recycle = (...args) => {\n    if(!args.length) { return recycle }\n    [recycle] = args\n    if(self.particleGenerator) {\n      self.particleGenerator.recycle = recycle\n    }\n    return self\n  }\n\n  self.confettiSource = (...args) => {\n    if(!args.length) { return confettiSource }\n    confettiSource = Object.assign(confettiSource, args[0])\n    return self\n  }\n\n  self.run = (...args) => {\n    if(!args.length) { return run }\n    const wasRunning = run\n    const [isRunning] = args\n    run = isRunning\n    if(!wasRunning && run) {\n      self.update()\n    }\n    return self\n  }\n\n  return self\n}\n\nexport default confetti\n","import React from 'react'\nimport confetti from './confetti'\n\nexport default class ReactConfetti extends React.PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    numberOfPieces: PropTypes.number,\n    confettiSource: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number,\n      w: PropTypes.number,\n      h: PropTypes.number,\n    }),\n    friction: PropTypes.number,\n    wind: PropTypes.number,\n    gravity: PropTypes.number,\n    colors: PropTypes.arrayOf(PropTypes.string),\n    opacity: PropTypes.number,\n    recycle: PropTypes.bool,\n    run: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    numberOfPieces: 200,\n    confettiSource: {},\n    friction: 0.99,\n    wind: 0,\n    gravity: 0.1,\n    colors: [\n      '#f44336', '#e91e63', '#9c27b0', '#673ab7', '#3f51b5',\n      '#2196f3', '#03a9f4', '#00bcd4', '#009688', '#4CAF50',\n      '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107', '#FF9800',\n      '#FF5722', '#795548',\n    ],\n    opacity: 1.0,\n    recycle: true,\n    run: true,\n  }\n\n  componentDidMount() {\n    this.confetti = confetti(this.canvas)\n      .numberOfPieces(this.props.numberOfPieces)\n      .confettiSource(this.props.confettiSource)\n      .friction(this.props.friction)\n      .wind(this.props.wind)\n      .gravity(this.props.gravity)\n      .colors(this.props.colors)\n      .opacity(this.props.opacity)\n      .recycle(this.props.recycle)\n      .run(this.props.run)()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.confetti\n      .numberOfPieces(nextProps.numberOfPieces)\n      .confettiSource(nextProps.confettiSource)\n      .friction(nextProps.friction)\n      .wind(nextProps.wind)\n      .gravity(nextProps.gravity)\n      .colors(nextProps.colors)\n      .opacity(nextProps.opacity)\n      .recycle(nextProps.recycle)\n      .run(nextProps.run)\n  }\n\n  render() {\n    const {\n      width,\n      height,\n      style,\n      /* eslint-disable no-unused-vars */\n      numberOfPieces,\n      friction,\n      wind,\n      gravity,\n      colors,\n      opacity,\n      recycle,\n      confettiSource,\n      run,\n      /* eslint-enable no-unused-vars */\n      ...passedProps\n    } = this.props\n    const canvasStyles = Object.assign({}, {\n      zIndex: 2,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      pointerEvents: 'none',\n      WebkitPointerEvents: 'none',\n      MozPointerEvents: 'none',\n    }, style)\n\n    return (\n      <canvas\n        width={width}\n        height={height}\n        ref={c => { this.canvas = c }}\n        style={canvasStyles}\n        {...passedProps}\n      />\n    )\n  }\n}\n"],"names":["randomRange","min","max","Math","random","confetti","canvas","numberOfPieces","confettiSource","width","friction","wind","gravity","colors","opacity","recycle","run","self","context","getContext","Particle","x","y","radius","utils","vx","vy","type","floor","w","h","r","angle","PI","anglespin","color","length","rotateY","ParticleGenerator","source","number","text","particles","particlesGenerated","prototype","update","this","save","translate","rotate","scale","beginPath","fillStyle","strokeStyle","globalAlpha","lineCap","lineWidth","arc","fill","i","cos","sin","lineTo","stroke","fillRect","closePath","restore","removeParticleAt","splice","getParticle","animate","nP","limit","push","forEach","p","height","_this","particleGenerator","clearRect","args","arguments","Object","assign","wasRunning","isRunning","ReactConfetti","React","PureComponent","props","nextProps","style","passedProps","canvasStyles","c","defaultProps"],"mappings":"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"}